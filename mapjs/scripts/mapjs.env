#!/usr/bin/env bash

# mapjs config
echo "Running ${BASH_SOURCE[0]}"

# Used to set correct paths for mapjs install
# For html links, use relative paths (to test/output folder) - more portable

# dev webserver values
# Leading slash ensures relative to root (mapjs/public)

# export DIR_OUTPUT="output"

# This is absolute, for reading/writing to the correct directory
# export DIR_HTML="$PATH_ARGMAP_ROOT/test"
# export DIR_PUBLIC_OUTPUT="$DIR_HTML/$DIR_OUTPUT" # Test output folder
# export DIR_HTML_INPUT="$DIR_HTML/input"          # Test input folder

# For html links, use relative paths (to test/output folder) - more portable
# export DIR_MAPJS_JSON="mapjs-json"
PATH_DIR_MAPJS_SRC_JS=$(getvar PATH_DIR_MAPJS_ROOT)/src
export PATH_DIR_MAPJS_SRC_JS
# export PATH_MAPJS_HTML_DIST_TAGS="${PATH_DIR_INCLUDES:-$DIR_HTML/$PATH_OUTPUT_FILE_HTML}"
# export PATH_LOG_FILE_EXPECT=/home/s6mike/git_projects/mapjs-git-bisect/expect_log.txt
# export PATH_BISECT_PATCH_FILE=$DIR_PROJECTS/mapjs-git-bisect/diffs/all_mapjs_fixes_latest.diff
# export PATH_REPLAY_SCRIPT=$PATH_ARGMAP_ROOT/test/devtools-recordings/argmap-add-child.json
# export PATH_REPLAY_SCRIPT_ADD_IDEA=$PATH_ARGMAP_ROOT/test/devtools-recordings/argmap-add-child.json
# export PATH_REPLAY_SCRIPT_NODE_CLICK=$PATH_ARGMAP_ROOT/test/devtools-recordings/argmap-node-click.json
# export PATH_REPLAY_SCRIPT_BUTTON_UNDO_REDO=$PATH_ARGMAP_ROOT/test/devtools-recordings/argmap-button-undo-redo.json
# export PATH_REPLAY_SCRIPT_BUTTON_ADD_LINK=$PATH_ARGMAP_ROOT/test/devtools-recordings/argmap-button-add-link.json
# export PATH_REPLAY_SCRIPT_EDIT_FIRST_CHILD=$PATH_ARGMAP_ROOT/test/devtools-recordings/argmap-edit-first-child.json
# export PATH_REPLAY_SCRIPT_KEYS_UNDO_REDO=$PATH_ARGMAP_ROOT/test/devtools-recordings/argmap-keys-undo-redo.json
# export PATH_REPLAY_SCRIPT_ADD_ROOT_PARENT=$PATH_ARGMAP_ROOT/test/devtools-recordings/argmap-add-root-parent.json
# export PATH_REPLAY_SCRIPT_ADD_SUPPORTING=$PATH_ARGMAP_ROOT/test/devtools-recordings/argmap-add-supporting-group.json
# export PATH_REPLAY_SCRIPT_ADD_SUPPORTING_E2V3=$PATH_ARGMAP_ROOT/test/devtools-recordings/argmap-add-supporting-group-e2v3.json
# export PATH_REPLAY_SCRIPT_EDIT_LINK_EXISTING=$PATH_ARGMAP_ROOT/test/devtools-recordings/argmap-edit-existing-link.json

# Don't work
# export PATH_REPLAY_SCRIPT_BUTTON_ZOOM=$PATH_ARGMAP_ROOT/test/devtools-recordings/argmap-button-zoom-in-out.json
# export PATH_REPLAY_SCRIPT_KEYS_ZOOM=$PATH_ARGMAP_ROOT/test/devtools-recordings/argmap-keys-zoom-in-zoom-reset.json
# export PATH_REPLAY_SCRIPT_DELETE_GRANDCHILD=$PATH_ARGMAP_ROOT/test/devtools-recordings/argmap-delete-grandchild.json

# TODO: Update edit link recordings to check that edit was successful. See PATH_REPLAY_SCRIPT_EDIT_LINK_EXISTING
# export PATH_REPLAY_SCRIPT_EDIT_LINK_NEW=$PATH_ARGMAP_ROOT/test/devtools-recordings/argmap-edit-new-link.json
# export PATH_REPLAY_SCRIPT_EDIT_LINK_EXISTING_ALL_ATTRIBUTES=$PATH_ARGMAP_ROOT/test/devtools-recordings/argmap-edit-existing-link-all-attributes.json
# TODO: update mapjs recordings?
# export PATH_REPLAY_SCRIPT_BUTTON_EDITLINK_ERROR=$DIR_PROJECTS/argmap/test/devtools-recordings/mapjs-button-editlink-menu-error.json
# export PATH_REPLAY_SCRIPT_MOUSE_PAST_EDITLINK=$DIR_PROJECTS/argmap/test/devtools-recordings/mapjs-mouse-past-linkEditWidget-after-link-click.json

# export PATH_REPLAY_SCRIPT=$PATH_REPLAY_SCRIPT_KEYS_UNDO_REDO

PATH_FILE_CONFIG_MAPJS=$(getvar PATH_FILE_CONFIG_MAPJS)
export PATH_FILE_CONFIG_MAPJS

# TODO create function to generalise this
PATH_FILE_CONFIG_MAPJS_RELATIVE_SRC=../config/$(basename "$PATH_FILE_CONFIG_MAPJS")
export PATH_FILE_CONFIG_MAPJS_RELATIVE_SRC

PATH_FILE_CONFIG_MAPJS_PROCESSED=$(getvar PATH_FILE_CONFIG_MAPJS_PROCESSED)
export PATH_FILE_CONFIG_MAPJS_PROCESSED
