{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
          {
            "name": "netlify dev",
            "type": "node",
            "request": "launch",
            "skipFiles": [
              "<node_internals>/**"
            ],
            "outFiles": [
              "${workspaceFolder}/mapjs/.netlify/functions-serve/**/*.js"
            ],
            "program": "${workspaceFolder}/mapjs/node_modules/.bin/netlify",
            "args": [
              "dev",
              "--edgeInspect"
            ],
            "console": "integratedTerminal",
            "env": {
              "BROWSER": "none"
            },
            "serverReadyAction": {
              "pattern": "Server now ready on (https?://[\\w:.-]+)",
              "uriFormat": "%s",
              "action": "debugWithChrome"
            }
          },
          {
            "type": "bashdb",
            "request": "launch",
            "name": "Bash-Debug (select script from list of sh files)",
            "cwd": "${workspaceFolder}",
            "program": "${command:SelectScriptName}",
            "showDebugOutput": true,
            "args": []
        },
        {
            "type": "bashdb",
            "request": "launch",
            "name": "tests.sh",
            "cwd": "${workspaceFolder}",
            "program": "${workspaceFolder}/test/test_scripts/tests.sh",
            "showDebugOutput": true,
            "terminalKind": "integrated",
            "args": [
                "html"
            ]
        },
        {
            "type": "bashdb",
            "request": "launch",
            "name": "debug.sh",
            "cwd": "${workspaceFolder}",
            "program": "${workspaceFolder}/scripts/debug.sh",
            "showDebugOutput": true,
            "terminalKind": "integrated",
            // "args": [
            //     "PATH_PUBLIC"
            // ]
        },
        {
            "type": "bashdb",
            "request": "launch",
            "name": "init_read_config.sh",
            "cwd": "${workspaceFolder}",
            "program": "${workspaceFolder}/scripts/init_read_config.sh",
            "showDebugOutput": true,
            "terminalKind": "integrated",
        },
        {
            "type": "bashdb",
            "request": "launch",
            "name": "argmap_init_script()",
            "cwd": "${workspaceFolder}",
            "program": "/home/s6mike/git_projects/argmap/scripts/argmap_init_script.sh",
            "showDebugOutput": true,
            "terminalKind": "integrated",
            // "args": [
            //     "PATH_PUBLIC"
            // ]
        },
        {
            "type": "lua",
            "request": "launch",
            "name": "Lua Debugger a2m multiline example",
            "program": "${config:lua.debug.settings.argmap.path.src-lua}/argmap2mup.lua",
            "arg": [
                "${workspaceFolder}/test/issues/WhiteSwan_minus_inline_objections_restoring.yaml",
            ],
            "env": {
                "PATH": "${config:lua.debug.settings.env.path}",
                "LUA_PATH": "${config:lua.debug.settings.path}",
                "LUA_CPATH": "${config:lua.debug.settings.cpath}"
            },
            "stopOnEntry": true,
        },
        {
            "type": "lua",
            "request": "launch",
            "name": "Lua Debugger a2m notes example",
            "program": "${config:lua.debug.settings.argmap.path.src-lua}/argmap2mup.lua",
            "arg": [
                "${workspaceFolder}/examples/example-2.yaml",
            ],
            "env": {
                "PATH": "${config:lua.debug.settings.env.path}",
                "LUA_PATH": "${config:lua.debug.settings.path}",
                "LUA_CPATH": "${config:lua.debug.settings.cpath}"
            },
            "stopOnEntry": true,
        },
        {
            "type": "lua",
            "request": "launch",
            "name": "Lua Debugger a2m",
            "program": "${config:lua.debug.settings.argmap.path.src-lua}/argmap2mup.lua",
            "arg": [
                "${workspaceFolder}/test/input/example1-clearly-false-white-swan-simplified.yaml",
                ">",
                "${workspaceFolder}/test/output/example1-clearly-false-white-swan-simplified.json"
            ],
            "env": {
                "PATH": "${config:lua.debug.settings.env.path}",
                "LUA_PATH": "${config:lua.debug.settings.path}",
                "LUA_CPATH": "${config:lua.debug.settings.cpath}"
            },
            "stopOnEntry": true,
        },
        {
            // Getting error:
            //  /home/s6mike/.local/bin/pandoc:1: unexpected symbol near '<\127>'
            //  See https://github.com/hoelzro/linotify/issues/18 for ideas
            "type": "lua",
            "request": "launch",
            "name": "Lua Debugger: pandoc-argmap.lua",
            "program": "/home/s6mike/.local/bin/pandoc",
            "arg": [
                "--template ${config:lua.debug.settings.argmap.path.src-template-main}",
                "${workspaceFolder}/test/input/markdown/example1-clearly-false-white-swan-simplified-1mapjs.md",
                "-o",
                "${workspaceFolder}/test/output/html/example1-clearly-false-white-swan-simplified-1mapjs-debug.html",
                "--lua-filter pandoc-argmap.lua",
                "--data-dir=${config:lua.debug.settings.system_root}/share/pandoc",
                "--metadata=mapjs-output-js:${env.path_public}/js/bundle.js",
                "--metadata=css:${env.path_public}/mapjs-default-styles.css"
            ],
            "env": {
                "PATH": "${config:lua.debug.settings.env.path}",
                "LUA_PATH": "${config:lua.debug.settings.path}",
                "LUA_CPATH": "${config:lua.debug.settings.cpath}"
            },
            "stopOnEntry": true
        },
        {
            "type": "lua-local",
            "request": "launch",
            "name": "Lua Local: cat example | argmap2mup",
            "program": {
                "command": "cat"
            },
            "args": [
                "${workspaceFolder}/examples/example.yaml",
                "|",
                "${config:lua.debug.settings.argmap.path.src-lua}/argmap2mup.lua"
            ],
            "env": {
                "PATH": "${config:lua.debug.settings.env.path}",
                "LUA_PATH": "${config:lua.debug.settings.path}",
                "LUA_CPATH": "${config:lua.debug.settings.cpath}"
            },
            "stopOnEntry": true,
            "verbose": true,
        },
        {
            "type": "lua-local",
            "request": "launch",
            "name": "Lua Local: argmap2mup",
            "program": {
                "command": "${config:lua.debug.settings.argmap.path.src-lua}/argmap2mup.lua"
            },
            "args": [
                "${workspaceFolder}/test/input/example1-clearly-false-white-swan-simplified.yaml",
                ">",
                "${workspaceFolder}/test/output/mapjs-json/example1-clearly-false-white-swan-simplified.json"
            ],
            "env": {
                "PATH": "${config:lua.debug.settings.env.path}",
                "LUA_PATH": "${config:lua.debug.settings.path}",
                "LUA_CPATH": "${config:lua.debug.settings.cpath}"
            },
            "stopOnEntry": true,
            "verbose": true,
        },
        {
            "type": "lua-local",
            "request": "launch",
            "name": "Lua Local: mup2argmap",
            "program": {
                "command": "${config:lua.debug.settings.argmap.path.src-lua}/mup2argmap.lua"
            },
            "args": [
                "${workspaceFolder}/test/input/mapjs-json/example1-clearly-false-white-swan-simplified.json",
                ">",
                "${workspaceFolder}/test/output/example1-clearly-false-white-swan-simplified.yaml"
            ],
            "env": {
                "PATH": "${config:lua.debug.settings.env.path}",
                "LUA_PATH": "${config:lua.debug.settings.path}",
                "LUA_CPATH": "${config:lua.debug.settings.cpath}"
            },
            "stopOnEntry": false
        },
        {
            "type": "lua-local",
            "request": "launch",
            "name": "Lua Local: argmap2tikz",
            "program": {
                "command": "${config:lua.debug.settings.argmap.path.src-lua}/argmap2tikz.lua"
            },
            "args": [
                "${workspaceFolder}/test/input/example1-clearly-false-white-swan-simplified.yaml",
                ">",
                "${workspaceFolder}/test/output/example1_clearly-false-white-swan_simplified.tex"
            ],
            "env": {
                "PATH": "${config:lua.debug.settings.env.path}",
                "LUA_PATH": "${config:lua.debug.settings.path}",
                "LUA_CPATH": "${config:lua.debug.settings.cpath}"
            },
            "stopOnEntry": false
        },
        {
            "type": "lua-local",
            "request": "launch",
            "name": "Lua Local: pandoc-argmap.lua",
            "program": {
                "command": "pandoc"
            },
            "args": [
                "--template ${config:lua.debug.settings.argmap.path.src-template-main}",
                "${workspaceFolder}/test/input/markdown/example1-clearly-false-white-swan-simplified-1mapjs.md",
                "-o",
                "${workspaceFolder}/test/output/html/example1-clearly-false-white-swan-simplified-1mapjs-debug.html",
                "--lua-filter pandoc-argmap.lua",
                "--data-dir=${config:lua.debug.settings.system_root}/share/pandoc",
                "--metadata=mapjs-output-js:${env.path_public}/js/bundle.js",
                "--metadata=css:${env.path_public}/mapjs-default-styles.css"
            ],
            "env": {
                "PATH": "${config:lua.debug.settings.env.path}",
                "LUA_PATH": "${config:lua.debug.settings.path}",
                "LUA_CPATH": "${config:lua.debug.settings.cpath}"
            },
            "stopOnEntry": true,
            "verbose": true,
        },
        {
            "type": "lua-local",
            "request": "launch",
            "name": "Lua Local: pandoc-argmap.lua meta mapjs",
            "program": {
                "command": "pandoc"
            },
            "args": [
                "--template ${config:lua.debug.settings.argmap.path.src-template-main}",
                "${workspaceFolder}/test/input/example1-clearly-false-white-swan-simplified-meta-mapjs.md",
                "-o",
                "${workspaceFolder}/test/output/html/example1-clearly-false-white-swan-simplified-meta-mapjs.html",
                "--lua-filter pandoc-argmap.lua",
                "--data-dir=${config:lua.debug.settings.system_root}/share/pandoc",
                "--metadata=mapjs-output-js:${env.path_public}/js/bundle.js",
                "--metadata=css:${env.path_public}/mapjs-default-styles.css"
            ],
            "env": {
                "PATH": "${config:lua.debug.settings.env.path}",
                "LUA_PATH": "${config:lua.debug.settings.path}",
                "LUA_CPATH": "${config:lua.debug.settings.cpath}"
            },
            "stopOnEntry": true
        },
        {
            "type": "lua-local",
            "request": "launch",
            "name": "Lua Local: pandoc md2pdf",
            "program": {
                "command": "pandoc"
            },
            "args": [
                "${workspaceFolder}/examples/example.md",
                "-o",
                "${workspaceFolder}/test/output/example.pdf",
                "--lua-filter pandoc-argmap.lua",
                "--pdf-engine",
                "lualatex",
                "--template",
                "${workspaceFolder}/examples/example-template.latex",
                "--data-dir=${config:lua.debug.settings.system_root}/share/pandoc"
            ],
            "env": {
                "PATH": "${config:lua.debug.settings.env.path}",
                "LUA_PATH": "${config:lua.debug.settings.path}",
                "LUA_CPATH": "${config:lua.debug.settings.cpath}"
            },
            "stopOnEntry": false
        },
        {
            "type": "lua-local",
            "request": "launch",
            "name": "Debug argmap2mup gdrive upload",
            "program": {
                "command": "${config:lua.debug.settings.argmap.path.src-lua}/argmap2mup.lua"
            },
            "args": [
                "-u",
                "${workspaceFolder}/test/input/example1-clearly-false-white-swan-simplified.yaml"
            ],
            "env": {
                "PATH": "${config:lua.debug.settings.env.path}",
                "LUA_PATH": "${config:lua.debug.settings.path}",
                "LUA_CPATH": "${config:lua.debug.settings.cpath}"
            },
            "stopOnEntry": false
        },
        {
            "type": "lua-local",
            "args": [],
            "name": "launch",
            "program": {
                "lua": "lua5.3",
                "file": "${file}"
            },
            "request": "launch",
            "stopOnEntry": false,
            "env": {
                "PATH": "${config:lua.debug.settings.env.path}",
                "LUA_PATH": "${config:lua.debug.settings.path}",
                "LUA_CPATH": "${config:lua.debug.settings.cpath}"
            }
        },
        {
            "type": "chrome",
            "request": "attach",
            "name": "Attach to browser 9221 (argmap debug)",
            "port": 9221,
            "webRoot": "${workspaceFolder}/${config:env.PATH_DIR_MAPJS_ROOT}",
            "sourceMaps": true,
        }
    ]
}