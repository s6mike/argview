[[plugins]]
  package = "@netlify/plugin-csp-nonce"
  [plugins.inputs]
    reportOnly = false
    # QUESTION: Try on production?
    unsafeEval = false
    excludedPath = [
      "/"
    #   "/api/*",
    #   "**/*.bespoke.extension"
    ]

[[plugins]]
  package = "netlify-plugin-csp-generator"
  
  [plugins.inputs]
  buildDir = "mapjs/src"

[build]
  publish = "mapjs/public/" # The path to your static content folder
  command = "./scripts/argmap_init_script.sh" # Command to start your dev server
  edge_functions = "mapjs/netlify/edge-functions"

[build.environment]
  ENV = "netlify"
  # QUESTION: add?
  #   PATH_BIN_LOCAL = "."
  # QUESTION: remove? Since env-arg-defaults has DIR_PROJECTS: ${PATH_PUBLIC}
  PATH_DIR_SCRIPTS = "scripts"
  PATH_BIN_GLOBAL = "/usr/bin"

  # Shouldn't be used but better to have an explicit value in case it's needed
  #   QUESTION: Or override config/environment-argmap-defaults.yaml?
  #     PATH_PROFILE_LOCAL = "/opt/buildhome/.local"
  #     And then add this to config/environment-argmap-defaults.yaml:
  #       PATH_ENVIRONMENT_GLOBAL: ${PATH_PROFILE_LOCAL}
  PATH_ENVIRONMENT_GLOBAL = "global"
  # QUESTION: If PATH_BIN_LOCAL = "." then remove this?
  PATH_FILE_YQ = "./yq"
  # QUESTION: Remove this now argmap-defaults.env set?
  PATH_ARGMAP_ROOT = "."
  PATH_DIR_CONFIG_ARGMAP_PROCESSED = "config/processed"
  # NODE_PATH = "/opt/build/cache/node_modules:./mapjs/node_modules"
  # NPM_FLAGS = "--prefix /opt/build/cache/node_modules"
  NODE_VERSION = "18.19.0"
  NPM_VERSION = "10.2.5"
  GO_VERSION = "1.20"

[context.production.environment]
  MODE = "prod"
  DIR_PROJECTS = "." # So debug logs not visible

[context.branch-deploy.environment]
  ENV = "netlify" # TEST: Remove, since in build.environment
  MODE = "dev"
  DIR_PROJECTS = "./mapjs/public" # So debug logs visible
  # NETLIFY_BUILD_DEBUG = "true"

[[redirects]]
  from = "/"
  to = "/output/html/example1-clearly-false-white-swan-simplified.html?map_id=mapjson_a55601d14d"
  status = 302
  force = false

[[redirects]]
  from = "/index.html"
  to = "/output/html/example1-clearly-false-white-swan-simplified.html?map_id=mapjson_a55601d14d"
  status = 302
  force = false

[[redirects]]
  from = "/schemas/*"
  to = "https://mapjs-schemas.netlify.app/schemas/:splat"
  status = 200 # QUESTION: Or 301 instead?
  force = true

[[edge_functions]]
  path = "/sm"
  function = "set_mapjs"

[[edge_functions]]
  path = "/gm"
  function = "get_mapjs"

[[edge_functions]]
  path = "/gmh"
  function = "shared_functions"

# sample dev block in the toml
# note: each of these fields are OPTIONAL and should only be used if you need an override
[dev]
  # QUESTION: Can I generate using PORT_DEV_SERVER? Best to generate netlify env variable instead of using config file - but could use pandoc template
  #   If you would like to set environment variables for use locally with the Netlify CLI, use context.dev instead.
  #   https://docs.netlify.com/configure-builds/file-based-configuration/#use-a-local-build-plugin
  #   https://docs.netlify.com/configure-builds/file-based-configuration/#use-the-build-command-to-substitute-environment-variable-values
  port = 9002 # The port that the netlify dev will be accessible on
  # TODO how do I open in odb browser by default?
  #   Maybe this?: https://cli.netlify.com/vscode/#add-vscode-launch-configurations
  autoLaunch = false # a Boolean value that determines if Netlify Dev launches the local server address in your browser
  # envFiles = [".env.development.local", ".env.local", ".env.development", ".env"] # The env files to use, ordered by priority (left - highest, right - lowest)

[[plugins]]
package = "@netlify/plugin-sitemap"

[[plugins]]
package = "netlify-plugin-cache"
  [plugins.inputs]
  # "/home/linuxbrew/.linuxbrew/lib/", "mapjs/node_modules/"
  paths = ["/opt/buildhome/.cache", "/opt/build/repo/yq", "/opt/build/repo/config/processed/", "/home/linuxbrew/.linuxbrew/lua_modules/"]

[[context.branch-deploy.plugins]]
package = "netlify-plugin-debug-cache"

[[context.production.plugins]]
package = "@netlify/plugin-lighthouse"
# optional, deploy the lighthouse report to a path under your site
  # [plugins.inputs.audits]
  #   output_path = "reports/lighthouse.html"